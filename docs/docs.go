// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Maintainer Shi Yue",
            "email": "hasbai@fduhole.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "List Messages of a User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Message"
                            }
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Clear Messages Deprecated",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "post": {
                "description": "Send to multiple recipients and save to db, admin only.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Send a message",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/message.CreateModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    }
                }
            }
        },
        "/messages/clear": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Clear Messages of a User",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/messages/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Delete a message of a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "message id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/users/push-tokens": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "List Tokens of a User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PushToken"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Add Token of a User",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token.CreateModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PushToken"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Delete the token of a user's certain device",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token.DeleteModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "message.CreateModel": {
            "type": "object",
            "required": [
                "recipients",
                "type"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.JSON"
                },
                "description": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "description": "message type, change \"oneof\" when MessageType changes",
                    "type": "string",
                    "enum": [
                        "favorite",
                        "reply",
                        "mention",
                        "modify",
                        "report",
                        "permission",
                        "report_dealt"
                    ]
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.JSON": {
            "type": "object",
            "additionalProperties": {}
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/models.JSON"
                },
                "description": {
                    "type": "string"
                },
                "has_read": {
                    "description": "兼容旧版",
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "message_id": {
                    "description": "兼容旧版 id",
                    "type": "integer"
                },
                "time_created": {
                    "type": "string"
                },
                "time_updated": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.MessageModel": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.PushToken": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "service": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "token.CreateModel": {
            "type": "object",
            "required": [
                "device_id",
                "service",
                "token"
            ],
            "properties": {
                "device_id": {
                    "type": "string",
                    "maxLength": 64
                },
                "service": {
                    "type": "string",
                    "enum": [
                        "apns",
                        "fcm",
                        "mipush"
                    ]
                },
                "token": {
                    "type": "string",
                    "maxLength": 64
                }
            }
        },
        "token.DeleteModel": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string",
                    "maxLength": 64
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Notification Center",
	Description:      "This is a notification microservice.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

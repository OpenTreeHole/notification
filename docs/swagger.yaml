basePath: /api
definitions:
  models.Map:
    additionalProperties: {}
    type: object
  models.Message:
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/models.Map'
      description:
        type: string
      message:
        type: string
      recipients:
        items:
          type: integer
        type: array
      url:
        type: string
    required:
    - code
    - data
    - description
    - message
    - recipients
    - url
    type: object
  models.MessageModel:
    properties:
      message:
        type: string
    type: object
  models.PushService:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - ServiceAPNS
    - ServiceFCM
    - ServiceMipush
  models.PushToken:
    properties:
      device_id:
        type: string
      service:
        $ref: '#/definitions/models.PushService'
      token:
        type: string
      user_id:
        type: integer
    type: object
  token.CreateModel:
    properties:
      device_id:
        maxLength: 64
        type: string
      service:
        enum:
        - apns
        - fcm
        - mipush
        type: string
      token:
        maxLength: 64
        type: string
    required:
    - device_id
    - service
    - token
    type: object
  token.DeleteModel:
    properties:
      device_id:
        maxLength: 64
        type: string
    type: object
info:
  contact:
    email: hasbai@fduhole.com
    name: Maintainer Shi Yue
  description: This is a notification microservice.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Notification Center
  version: 2.0.0
paths:
  /:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MessageModel'
  /messages:
    post:
      description: Send to multiple recipients and save to db, admin only.
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/models.Message'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Message'
      summary: Send a message
      tags:
      - Message
  /users/push-tokens:
    delete:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/token.DeleteModel'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete the token of a user's certain device
      tags:
      - Token
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PushToken'
            type: array
      summary: List Tokens of a User
      tags:
      - Token
    post:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/token.CreateModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PushToken'
      summary: Add Token of a User
      tags:
      - Token
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
